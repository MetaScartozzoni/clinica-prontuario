-- =====================================================================================
-- Arquivo: 06_resource_management_tables.sql
-- Descrição: Define tabelas para gerenciamento de salas, equipamentos e inventário.
-- Ordem de execução: 6
-- =====================================================================================

CREATE TABLE IF NOT EXISTS public.rooms (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    room_number TEXT NOT NULL,
    room_name TEXT,
    room_type TEXT NOT NULL,
    capacity INTEGER,
    floor INTEGER,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    notes TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.equipment (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    model TEXT,
    serial_number TEXT,
    room_id BIGINT REFERENCES public.rooms(id),
    purchase_date DATE,
    warranty_expiry_date DATE,
    last_maintenance_date DATE,
    next_maintenance_date DATE,
    status TEXT NOT NULL,
    notes TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.inventory (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    item_name TEXT NOT NULL,
    item_code TEXT,
    category TEXT NOT NULL,
    description TEXT,
    unit TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    minimum_quantity INTEGER NOT NULL,
    location TEXT,
    supplier TEXT,
    cost_per_unit NUMERIC,
    expiry_date DATE,
    last_ordered_date DATE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.inventory_transactions (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    inventory_id BIGINT NOT NULL REFERENCES public.inventory(id),
    transaction_type TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    transaction_date TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    performed_by UUID REFERENCES public.profiles(id),
    notes TEXT,
    related_entity_type TEXT,
    related_entity_id BIGINT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);